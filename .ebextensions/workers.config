packages:
  yum:
    jq: []

files:
  "/etc/init/delayed-job.conf":
    content: |
      description "Start delayed_job worker"

      start on runlevel [2345]
      stop on runlevel [!2345]

      respawn

      script
        EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
        EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)

        . $EB_SUPPORT_DIR/envvars-wrapper.sh
        . $EB_SCRIPT_DIR/use-app-ruby.sh

        if [ -f /etc/elasticbeanstalk/set-ulimit.sh ]; then
        . /etc/elasticbeanstalk/set-ulimit.sh
        fi

        EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
        cd $EB_APP_DEPLOY_DIR
        exec su -s /bin/bash -c "bundle exec rake jobs:work" webapp
      end script

commands:
  match_nginx_timeout_to_sqs_timeout:
    command: |
      if /opt/elasticbeanstalk/bin/get-config meta -k sqsdconfig 2>/dev/null; then
        VISIBILITY_TIMEOUT=$(/opt/elasticbeanstalk/bin/get-config meta -k sqsdconfig | jq -r .visibility_timeout)
        echo "proxy_read_timeout ${VISIBILITY_TIMEOUT}s;" > /etc/nginx/conf.d/worker.conf
        service nginx restart
      fi
  ensure_webapp_home_for_cron_execution:
    command: |
      mkdir -p ~webapp

container_commands:
  start_delayed_job:
    command: |
      if /opt/elasticbeanstalk/bin/get-config meta -k sqsdconfig 2>/dev/null; then
        if status delayed-job | grep -q running; then
          restart delayed-job
        else
          start delayed-job
        fi
      fi
