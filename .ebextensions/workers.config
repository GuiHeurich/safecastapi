packages:
  yum:
    jq: []

files:
  "/etc/init/delayed-job.conf":
    content: |
      description "Start delayed_job worker"

      start on runlevel [2345]
      stop on runlevel [!2345]

      respawn

      script
        EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
        EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)

        . $EB_SUPPORT_DIR/envvars-wrapper.sh
        . $EB_SCRIPT_DIR/use-app-ruby.sh

        if [ -f /etc/elasticbeanstalk/set-ulimit.sh ]; then
        . /etc/elasticbeanstalk/set-ulimit.sh
        fi

        EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
        cd $EB_APP_DEPLOY_DIR
        exec su -s /bin/bash -c "bundle exec rake jobs:work" webapp
      end script

commands:
  00_parameters_cache:
    command: |
      /opt/aws/bin/cfn-get-metadata --region `{"Ref": "AWS::Region"}` --stack `{"Ref": "AWS::StackName"}` \
        --resource AWSEBBeanstalkMetadata --key AWS::ElasticBeanstalk::Ext |
        jq .Parameters > /etc/elasticbeanstalk/parameters-cache
  01_match_nginx_timeout_to_sqs_timeout:
    command: |
      VISIBILITY_TIMEOUT=$(jq -r .AWSEBVisibilityTimeout /etc/elasticbeanstalk/parameters-cache)
      if [[ "${VISIBILITY_TIMEOUT}" != "null" ]]; then
        echo "proxy_read_timeout ${VISIBILITY_TIMEOUT}s;" > /etc/nginx/conf.d/worker.conf
        service nginx restart
      fi
  02_ensure_webapp_home:
    command: |
      mkdir -p ~webapp

container_commands:
  00_start_worker:
    command: |
      if jq -r 'keys | .[]' /etc/elasticbeanstalk/parameters-cache | grep -q AWSEBWorkerQueueURL; then
        if status delayed-job | grep -q running; then
          restart delayed-job
        else
          start delayed-job
        fi
      fi
